{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","text","value","setFilter","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","newName","newNumber","persons","setPersons","setNewName","setNewNumber","setErrorMessage","updatePerson","personObject","person","find","per","changedPerson","number","personService","map","name","setTimeout","catch","error","filter","onSubmit","preventDefault","findIndex","window","confirm","returnedPerson","concat","type","Persons","deletePerson","personsToShow","length","toLowerCase","includes","i","key","onClick","Notification","message","className","App","useState","errorMessage","useEffect","initialPersons","removedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f014b2b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ text, value, setFilter }) => {\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {text} <input value={value} onChange={handleFilterChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n","import React from \"react\";\r\n\r\nimport personService from \"../services/persons\";\r\n\r\nconst PersonForm = ({\r\n  newName,\r\n  newNumber,\r\n  persons,\r\n  setPersons,\r\n  setNewName,\r\n  setNewNumber,\r\n  setErrorMessage\r\n}) => {\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    let id;\r\n\r\n    if (persons.find(person => person.name === newName)) {\r\n      id = persons.findIndex(person => person.name === newName) + 1;\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        return updatePerson(id, personObject);\r\n      }\r\n    }\r\n\r\n    personService.create(personObject).then(returnedPerson => {\r\n      setPersons(persons.concat(returnedPerson));\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n      setErrorMessage(`Added ${personObject.name}`);\r\n      setTimeout(() => {\r\n        setErrorMessage(null);\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  const updatePerson = (id, personObject) => {\r\n    const person = persons.find(per => per.id === id);\r\n    const changedPerson = { ...person, number: personObject.number };\r\n\r\n    personService\r\n      .update(id, changedPerson)\r\n      .then(changedPerson => {\r\n        setPersons(\r\n          persons.map(person =>\r\n            person.name === newName ? { ...changedPerson } : person\r\n          )\r\n        );\r\n        setErrorMessage(\r\n          `Number updated`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Information of ${personObject.name} has already been removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setPersons(persons.filter(per => per.id !== id));\r\n      });\r\n  };\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ filter, persons, deletePerson }) => {\r\n  const personsToShow =\r\n    filter.length === 0\r\n      ? persons\r\n      : persons.filter(person =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n  return (\r\n    <div>\r\n      {personsToShow.map((person, i) => (\r\n        <p key={i}>\r\n          {`${person.name} ${person.number}`} <button onClick={() => deletePerson(person)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  if (message.includes(\"Added\")) {\r\n      return <div className=\"add\">{message}</div>;\r\n  }\r\n\r\n  if (message.includes(\"Number updated\")) {\r\n    return <div className=\"update\">{message}</div>;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const deletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.remove(person.id).then(removedPerson => {\n        setPersons(persons.filter(per => per.id !== person.id));\n      });\n      setErrorMessage(`${person.name} deleted`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter text=\"filter shown with\" value={filter} setFilter={setFilter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        persons={persons}\n        setPersons={setPersons}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        setErrorMessage={setErrorMessage}\n      />\n      <h3>Numbers</h3>\n      <Persons filter={filter} persons={persons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}